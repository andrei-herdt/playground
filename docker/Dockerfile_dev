FROM play_image:1.0

ARG NCORE

# Set image locale.
ENV LANG en_US.UTF-8
ENV LANGUAGE en_US:en
ENV TZ=Europe/London

ARG NEOVIM_URL='https://github.com/neovim/neovim/archive/refs/tags/stable.tar.gz'

RUN apt-get update \
    && DEBIAN_FRONTEND=noninteractive apt-get install \
    curl kmod \
    ripgrep tree xclip zip unzip \
    gettext \
        --assume-yes --no-install-recommends && apt-get clean && rm -rf /var/lib/apt/lists/*

# Install Neovim from source.
RUN mkdir -p /root/TMP \
&& cd /root/TMP && curl -LO $NEOVIM_URL \
&& tar -xvf stable.tar.gz \
&& cd /root/TMP/neovim-stable && make -j ${NCORE} && make install \
&& rm -rf /root/TMP

RUN update-alternatives --install /usr/local/bin/vi vi /usr/local/bin/nvim 1 && \
  update-alternatives --set vi /usr/local/bin/nvim

# Pynvim
RUN pip3 install pynvim

# Deno
#ENV DENO_INSTALL="/usr/local"
#RUN curl -fsSL https://deno.land/install.sh | sh

# Map rg to ag
RUN update-alternatives --install /usr/local/bin/ag ag /usr/bin/rg 1

# Notebook
RUN pip3 install notebook pudb

# Install robot descriptions  
RUN pip3 install robot_descriptions
ENV ROBOT_DESCRIPTIONS_CACHE=/workdir/

# Configurations
RUN apt-get update \
    && DEBIAN_FRONTEND=noninteractive apt-get install \
    tmux zsh tig \
        --assume-yes --no-install-recommends && apt-get clean && rm -rf /var/lib/apt/lists/*
	
RUN sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended

# Configure git
RUN git config --global --add safe.directory /workdir/playground \
&& git config --global user.email "andrei.herdt@gmail.com" \
&& git config --global user.name "Andrei Herdt" \
&& git config --global core.editor vi

# Install proxsuite
RUN pip3 install proxsuite

# Install browser and xdg-utils
RUN apt-get update \
  && DEBIAN_FRONTEND=noninteractive apt-get install \
    firefox xdg-utils \
    --assume-yes --no-install-recommends && apt-get clean && rm -rf /var/lib/apt/lists/*

# Install dotfiles
RUN cd /root/ && git clone http://github.com/andrei-herdt/dotfiles \
&& cd /root/dotfiles/ \
&& cp .tmux.conf .zshrc ~

# Install fzf
#
RUN cd /root/ \
&& git clone --depth 1 http://github.com/junegunn/fzf .fzf \
&& cd .fzf \
&& ./install --all

# Install npm, python3-venv (for python linter)
RUN apt-get update \
  && DEBIAN_FRONTEND=noninteractive apt-get install \
    npm python3-venv \
    --assume-yes --no-install-recommends && apt-get clean && rm -rf /var/lib/apt/lists/*

# Install gh for github authorisation
RUN apt-get update \
  && DEBIAN_FRONTEND=noninteractive apt-get install \
    gh \
    --assume-yes --no-install-recommends && apt-get clean && rm -rf /var/lib/apt/lists/*
#
# Install htop
RUN apt-get update \
  && DEBIAN_FRONTEND=noninteractive apt-get install \
    htop \
    --assume-yes --no-install-recommends && apt-get clean && rm -rf /var/lib/apt/lists/*

# ML dependencies
pip install mujoco_mjx brax

# Jaxlib
# CUDA 12 installation
# Note: wheels only available on linux.
pip install --upgrade "jax[cuda12_pip]" -f https://storage.googleapis.com/jax-releases/jax_cuda_releases.html

RUN apt-get update \
    && DEBIAN_FRONTEND=noninteractive apt-get install \
    ffmpeg \
        --assume-yes --no-install-recommends && apt-get clean && rm -rf /var/lib/apt/lists/*


